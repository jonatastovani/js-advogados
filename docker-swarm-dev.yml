version: "3.9"

services:
    # Serviço PHP
    web:
        image: tovanijonatas/php839-jsadvogados:v1
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 1G
                reservations:
                    cpus: "0.1"
                    memory: 20M
            restart_policy:
                condition: on-failure
        volumes:
            - app_data:/var/www/app # Monta o volume nomeado no container web
            # - ./app:/var/www/app # teste
        networks:
            - laravel
        environment:
            # APP_ENV é definido aqui, isso vai influenciar as configurações do Laravel
            - APP_ENV=${APP_ENV}
            - APP_DEBUG=${APP_DEBUG}
            - DB_DATABASE=${DB_DATABASE}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST_LOCAL=${DB_HOST_LOCAL}
            - REDIS_HOST_LOCAL=${REDIS_HOST_LOCAL}

    # Serviço Nginx
    nginx:
        image: nginx:alpine
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager] # Opcional: rodar apenas nos nodes managers
        ports:
            - "80:80" # Porta para HTTP
            - "443:443" # Porta para HTTPS
        volumes:
            - ${NGINX_DEFAULT_CONF_PATH}:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/error.html:/var/www/html/error.html
            # - ./app:/var/www/app
            - app_data:/var/www/app # Monta o volume nomeado no container nginx
            # - ./app:/var/www/app # Monta o volume nomeado no container nginx
        networks:
            - laravel

    # Serviço Redis
    phpredis:
        image: redis:alpine
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        networks:
            - laravel
        volumes:
            - phpredis_data:/data
        # Remove as portas para manter acesso apenas pela rede interna

    # Serviço PostgreSQL
    postgres:
        image: postgres:16.3
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        networks:
            - laravel
        volumes:
            - postgres_data:/var/lib/postgresql/data
        # Remove as portas para manter acesso apenas pela rede interna

    # # Serviço PgAdmin
    # pgadmin:
    #     image: dpage/pgadmin4
    #     deploy:
    #         replicas: 1
    #         restart_policy:
    #             condition: on-failure
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: "dev@example.com"
    #         PGADMIN_DEFAULT_PASSWORD: "admin"
    #     networks:
    #         - laravel
    #     volumes:
    #         - pgadmin_data:/var/lib/pgadmin
    #     # Remove as portas para manter acesso apenas pela rede interna

networks:
    laravel:
        driver: overlay
        attachable: true

volumes:
    app_data: # Volume nomeado para compartilhar arquivos da aplicação
    postgres_data:
    phpredis_data:
    # pgadmin_data:
