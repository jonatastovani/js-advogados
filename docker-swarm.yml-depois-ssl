version: "3.9"

services:
    # Serviço PHP
    web:
        image: tovanijonatas/php839-jsadvogados:v1
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 1G
                reservations:
                    cpus: "0.1"
                    memory: 20M
            restart_policy:
                condition: on-failure
        volumes:
            - app-data:/var/www/app # Monta o volume nomeado no container web
        networks:
            - laravel
        environment:
            - PHP_VERSION=8.3.9-fpm-bullseye

    # Serviço Nginx
    nginx:
        image: nginx:alpine
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager] # Opcional: rodar apenas nos nodes managers
        ports:
            - "80:80" # Porta para HTTP
            - "443:443" # Porta para HTTPS
        volumes:
            - ./docker/nginx/sites.conf:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/error.html:/var/www/html/error.html
            - ./docker/certbot/conf:/etc/letsencrypt
            - app-data:/var/www/app # Monta o volume nomeado no container nginx
        networks:
            - laravel

    # Serviço Redis
    phpredis:
        image: redis:alpine
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        networks:
            - laravel
        volumes:
            - phpredis_data:/data

    # Serviço PostgreSQL
    postgres:
        image: postgres:16.3
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            POSTGRES_DB: app-js-dev
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: secret
        networks:
            - laravel
        volumes:
            - postgres_data:/var/lib/postgresql/data

    # Serviço PgAdmin
    pgadmin:
        image: dpage/pgadmin4
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            PGADMIN_DEFAULT_EMAIL: "dev@example.com"
            PGADMIN_DEFAULT_PASSWORD: "admin"
        networks:
            - laravel
        volumes:
            - pgadmin_data:/var/lib/pgadmin

    # Serviço Certbot
    certbot:
        image: certbot/certbot
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            CERTBOT_EMAIL: byteforgesuporte@gmail.com
        volumes:
            - ./docker/certbot/conf:/etc/letsencrypt
            - ./docker/certbot/logs:/var/log/letsencrypt
            - ./docker/nginx/sites.conf:/etc/nginx/conf.d/default.conf
        networks:
            - laravel
        entrypoint: ["/bin/sh", "-c"]
        command: >
            /bin/sh -c "trap exit TERM; 
            while :; do 
                certbot renew --quiet --webroot -w /var/www/app/public && 
                nginx -s reload; 
                sleep $$((60*60*24*60)); 
            done"

networks:
    laravel:
        driver: overlay
        attachable: true

volumes:
    app-data: # Volume nomeado para compartilhar arquivos da aplicação
    postgres_data:
    phpredis_data:
    pgadmin_data:
