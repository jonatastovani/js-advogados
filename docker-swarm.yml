version: "3.9"

services:
    # Serviço PHP
    web:
        image: tovanijonatas/php839-jsadvogados:v1
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 1G
                reservations:
                    cpus: "0.1"
                    memory: 20M
            restart_policy:
                condition: on-failure
        # healthcheck:
        #     test: ["CMD", "curl", "-f", "http://localhost:9000"]
        #     interval: 30s
        #     timeout: 10s
        #     retries: 5
        volumes:
            - app-data:/var/www/app # Volume nomeado para a aplicação
        depends_on:
            - laravel
        networks:
            - laravel
        environment:
            - PHP_VERSION=8.3.9-fpm-bullseye

    # Serviço Nginx
    nginx:
        image: nginx:alpine
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager]
            update_config: # Atualização progressiva para evitar interrupções
                parallelism: 1
                delay: 10s
        ports:
            - "80:80" # Porta HTTP
            - "443:443" # Porta HTTPS
        volumes:
            - ./docker/nginx/sites.conf:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/error.html:/var/www/html/error.html
            - ./docker/certbot/conf:/etc/letsencrypt
            - app-data:/var/www/app # Compartilha os dados da aplicação
        depends_on:
            - web
        networks:
            - laravel

    # Serviço Redis
    phpredis:
        image: redis:alpine
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        networks:
            - laravel
        volumes:
            - phpredis_data:/data

    # Serviço PostgreSQL
    postgres:
        image: postgres:16.3
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            POSTGRES_DB: app-js-dev
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: secret
        networks:
            - laravel
        volumes:
            - postgres_data:/var/lib/postgresql/data

        # Serviço Certbot com renovação automática
    certbot:
        image: certbot/certbot
        deploy:
            replicas: 1
            restart_policy:
                condition: any
        volumes:
            - ./docker/certbot/conf:/etc/letsencrypt
            - ./docker/certbot/logs:/var/log/letsencrypt
            - app-data:/var/www/app
            - ./renew_certificates.sh:/renew_certificates.sh # Monta o script no container
        networks:
            - laravel
        entrypoint: ["/bin/sh", "/renew_certificates.sh"] # Define o script como comando principal

networks:
    laravel:
        driver: overlay
        attachable: true

volumes:
    app-data:
    postgres_data:
    phpredis_data:
